trigger:
  - none

pool:
  name: iac-poc-pool

parameters:
  - name: asbKey
    displayName: 'ASB Key'
    type: string
    default: ''

variables:
  functionBuildDirectory: target/azure-functions/asb-function-app
  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  # ASB Key
  asbKey: ${{ parameters.asbKey }}

steps:

  - script: |
      # Downloading Maven 3.8.6
      wget https://archive.apache.org/dist/maven/maven-3/3.8.6/binaries/apache-maven-3.8.6-bin.tar.gz

      # Extracting Maven to the /opt directory
      sudo tar -xvzf apache-maven-3.8.6-bin.tar.gz -C /opt

      # Create the directory if it doesn't exist to ensure the mv command knows it's a directory
      sudo mkdir -p /opt/maven

      # Now move the extracted Maven into the directory
      sudo mv /opt/apache-maven-3.8.6/* /opt/maven/

      # Setting up environment variables
      echo "export MAVEN_HOME=/opt/maven" | sudo tee -a /etc/profile.d/maven.sh
      echo "export PATH=\$PATH:\$MAVEN_HOME/bin" | sudo tee -a /etc/profile.d/maven.sh

      # Loading the new environment variables
      source /etc/profile.d/maven.sh
      
      # Set MAVEN_HOME as a pipeline variable
      echo "##vso[task.setvariable variable=MAVEN_HOME]/opt/maven"
      
      # Add Maven bin to the PATH for subsequent tasks
      echo "##vso[task.setvariable variable=PATH]$(PATH):/opt/maven/bin"    

    displayName: 'Install latest Maven'

  - task: Maven@3
    displayName: 'Package Functions'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean package'
      mavenPath: '$(MAVEN_HOME)/bin/mvn' # Use the MAVEN_HOME variable set in the previous step
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false

  - script: ls -al $(workingDirectory)/target
    displayName: 'List files in target directory'

  - script: |
      
      # install zip
      sudo apt-get install zip -y
      
      # Move to the target directory
      echo "moving to: $(functionBuildDirectory)"
      cd $(functionBuildDirectory)

      echo "Listing Directory: $(functionBuildDirectory)"
      ls -al $(functionBuildDirectory)

      # Create a ZIP file of the directory contents
      zip -r asb-function-app.zip .

      echo "Listing Directory: $(functionBuildDirectory)"
      ls -al $(functionBuildDirectory)

    displayName: 'Zip Function App'
    workingDirectory: $(System.DefaultWorkingDirectory)

  - task: AzureCLI@2
    displayName: 'Deploy Function App'
    inputs:
      azureSubscription: 'test-conn' # This still needs to be a valid service connection.
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        
        echo "Listing Directory: $(workingDirectory)"
        ls -al $(workingDirectory)
        
        az account set --subscription f8ae64a8-decc-4be8-9dbe-e14eba877219    
        
        az functionapp deployment source config-zip \
                 --name $(functionAppName) \
                 --resource-group asb-poc-rg \
                 --src $(functionBuildDirectory)/asb-function-app.zip
